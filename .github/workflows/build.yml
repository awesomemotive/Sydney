# GitHub Actions Workflow for bundling production theme zip file and attach it as an artifact in the workflow

name: Build project artifact
on:
  workflow_call:

env:
  builds-directory: ~/builds/athemes

jobs:
  create-build-artifact:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # This action exposes GitHub environment variables, making them available in subsequent steps.
      - name: GitHub Environment Variables Action
        uses: FranzDiebold/github-env-vars-action@v2.8.0

      - name: Set Project Name
        run: |
          repo_full_name="${{ github.repository }}"
          repo_short_name="${repo_full_name##*/}"
          echo "PROJECT_NAME=${repo_short_name,,}" >> $GITHUB_ENV

      - name: Clean unneeded files
        run: |
          [ -f .gitignore ] && rm .gitignore
          [ -f phpcs.xml ] && rm phpcs.xml
          [ -f wpgulp.config.js ] && rm wpgulp.config.js
          [ -f gulpfile.babel.js ] && rm gulpfile.babel.js
          [ -f composer.json ] && rm composer.json
          [ -f composer.lock ] && rm composer.lock
          [ -f .cursorignore ] && rm .cursorignore
          [ -f package.json ] && rm package.json
          [ -f package-lock.json ] && rm package-lock.json
          [ -f phpcs.xml ] && rm phpcs.xml
          [ -f playwright.config.js ] && rm playwright.config.js
          [ -d .github ] && rm -r .github
          [ -d .git ] && rm -r .git
          [ -d node_modules ] && rm -r node_modules
          [ -d tests ] && rm -r tests

      - name: Create directory for build zip
        run: mkdir ${{ env.PROJECT_NAME }}

      - name: Move files to theme (lowercase) directory
        run: mv * ${{ env.PROJECT_NAME }} 2> /dev/null || true

      - name: Create Zip
        run: zip -qq -r "${{ env.PROJECT_NAME }}.zip" ${{ env.PROJECT_NAME }}/

      - name: Prepare builds directory
        run: mkdir -p ${{ env.builds-directory }}/${{ env.PROJECT_NAME }}/${{ env.CI_REF_NAME_SLUG }}

      - name: Move zip to build directory
        run: mv ${{ env.PROJECT_NAME }}.zip ${{ env.builds-directory }}/${{ env.PROJECT_NAME }}/${{ env.CI_REF_NAME_SLUG }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}
          path: .

      - name: Remove the (temporary) zip directory
        run: rm -r ${{ env.PROJECT_NAME }}